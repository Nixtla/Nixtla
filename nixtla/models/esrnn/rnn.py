# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/models_esrnn__rnn.ipynb (unless otherwise specified).

__all__ = ['RNN']

# Cell
import os
import time
from copy import deepcopy
from pathlib import Path

import numpy as np
import pandas as pd
import torch as t
import torch.nn as nn
import torch.optim as optim
from torch.optim.lr_scheduler import StepLR

from .esrnn import ESRNN

# Cell
class RNN(ESRNN):
    def __init__(self,
                 input_size,
                 output_size,
                 max_epochs,
                 learning_rate,
                 lr_scheduler_step_size,
                 lr_decay,
                 gradient_eps,
                 gradient_clipping_threshold,
                 rnn_weight_decay,
                 noise_std,
                 testing_percentile,
                 training_percentile,
                 cell_type,
                 state_hsize,
                 dilations,
                 add_nl_layer,
                 loss,
                 random_seed,
                 device=None,
                 root_dir='./'):

        assert loss != 'SMYL', 'SMYL loss not valid for RNN model.'
        es_component = 'identity'
        seasonality = []
        level_variability_penalty = 0
        per_series_lr_multip = 1
        super(RNN, self).__init__(input_size,
                                  output_size,
                                  max_epochs,
                                  learning_rate,
                                  lr_scheduler_step_size,
                                  lr_decay,
                                  per_series_lr_multip,
                                  gradient_eps,
                                  gradient_clipping_threshold,
                                  rnn_weight_decay,
                                  noise_std,
                                  level_variability_penalty,
                                  testing_percentile,
                                  training_percentile,
                                  es_component,
                                  cell_type,
                                  state_hsize,
                                  dilations,
                                  add_nl_layer,
                                  seasonality,
                                  loss,
                                  random_seed,
                                  device,
                                  root_dir)